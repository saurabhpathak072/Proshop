{"version":3,"sources":["components/Footer/Footer.js","components/Header/Header.js","actions/userActions.js","constants/userConstants.js","components/Ratings/Ratings.js","components/Product/Product.js","components/Loader/Loader.js","components/Message.js/Message.js","screens/HameScreen/HomeScreen.js","actions/productActions.js","constants/productConstants.js","screens/ProductsScreen/ProductsScreen.js","actions/cartActions.js","constants/cartConstants.js","screens/CartScreen/CartScreen.js","components/FormContainer/FormContainer.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/ProfileScreen/ProfileScreen.js","components/CheckoutSteps/CheckoutSteps.js","screens/ShippingScreen/ShippingScreen.js","screens/PaymentScreen/PaymentScreen.js","App.js","serviceWorker.js","store/store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","Header","dispatch","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","variant","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","name","Item","onClick","localStorage","removeItem","type","Ratings","value","text","color","style","defaultProps","Product","products","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","HomeScreen","productList","loading","error","useEffect","a","axios","get","data","payload","response","message","map","product","key","sm","md","lg","xl","withRouter","history","match","useState","qty","setQty","productDetails","params","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","x","Button","push","disabled","addToCart","getState","setItem","JSON","stringify","cart","cartItems","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","item","rounded","reduce","acc","toFixed","FormContainer","xs","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","userDetails","user","success","userUpdateProfile","console","log","Authorization","token","put","updateUserProfile","CheckoutSteps","step1","step2","step3","step4","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","paymentMethod","setPaymentMethod","Check","label","checked","App","path","exact","Boolean","window","hostname","reducer","combineReducers","action","reviews","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d9bcfa4a.chunk.js","sourcesContent":["import React from 'react'\nimport {Container,Row,Col} from 'react-bootstrap';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; ProShop\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {Nav,Navbar,Container, NavDropdown} from 'react-bootstrap';\nimport { logout } from '../../actions/userActions';\n\nconst Header = () => {\n    const dispatch = useDispatch()\n    const userLogin =useSelector(state=>state.userLogin);\n    const {userInfo}=userLogin\n\n    const logoutHandler = ()=>{\n        dispatch(logout())\n    }\n    return (\n        <header>\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>  \n        <Container>  \n            <LinkContainer to='/'>      \n        <Navbar.Brand >ProShop</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n            <LinkContainer to='/cart'>\n            <Nav.Link ><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\n            </LinkContainer> \n            {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )\n            \n            \n            }\n            \n            </Nav>\n        </Navbar.Collapse>\n        </Container>\n        </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nimport axios from 'axios';\n\nexport const login = (email,password)=>async (dispatch)=>{\n    try {\n        dispatch({\n            type:USER_LOGIN_REQUEST\n        })\n        const config={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n        const {data}= await axios.post('/api/users/login',{email,password},config)\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response\n        }) \n    }\n}\n\nexport const logout =()=>dispatch=>{\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type:USER_LOGOUT\n    })\n}\n\nexport const register = (name,email,password)=>async (dispatch)=>{\n    try {\n        dispatch({\n            type:USER_REGISTER_REQUEST\n        })\n        const config={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n        const {data}= await axios.post('/api/users',{name,email,password},config)\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload:data\n        })\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response\n        }) \n    }\n}\n\nexport const getUserDetails = (id)=>async (dispatch,getState)=>{\n    try {\n        dispatch({\n            type:USER_DETAILS_REQUEST\n        })\n\n        const {userLogin:{userInfo}}=getState()\n\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }\n        console.log(\"id\",id);\n\n        const {data}= await axios.get(`/api/users/${id}`,config)\n        console.log(\"data\",data)\n        dispatch({\n            type:USER_DETAILS_SUCCESS,\n            payload:data\n        })\n       \n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response\n        }) \n    }\n}\n\nexport const updateUserProfile = (user)=>async (dispatch,getState)=>{\n    try {\n        dispatch({\n            type:USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {userLogin:{userInfo}}=getState()\n\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }\n    \n\n        const {data}= await axios.put(`/api/users/profile`,user,config)\n        console.log(\"data\",data)\n        dispatch({\n            type:USER_UPDATE_PROFILE_SUCCESS,\n            payload:data\n        })\n       \n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response\n        }) \n    }\n}","export const USER_LOGIN_REQUEST   = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS   = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL   = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT   = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST   = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS   = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL   = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST   = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS   = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL   = 'USER_DETAILS_FAIL'\n\n\nexport const USER_UPDATE_PROFILE_REQUEST   = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS   = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL   = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET   = 'USER_UPDATE_PROFILE_RESET'\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Ratings = ({value,text,color}) => {\n    return (\n        <div className='rating'>\n            <span>\n                <i style={{color}} className={value >= 1 ? 'fas fa-star': value >=0.5 ? 'fas fa-star-half-alt':'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}}  className={value >= 2 ? 'fas fa-star': value >=1.5 ? 'fas fa-star-half-alt':'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}}  className={value >= 3 ? 'fas fa-star': value >=2.5 ? 'fas fa-star-half-alt':'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}}  className={value >= 4 ? 'fas fa-star': value >=3.5 ? 'fas fa-star-half-alt':'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}}  className={value >= 5 ? 'fas fa-star': value >=4.5 ? 'fas fa-star-half-alt':'far fa-star'}></i>\n            </span>\n    <span>{text && text}</span>\n        </div>\n    )\n}\n\nRatings.defaultProps ={\n    color:'#f8e825'\n}\n\nRatings.propTypes={\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n}\n\nexport default Ratings\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Ratings from '../Ratings/Ratings'\n\nconst Product = ({products}) => {\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${products._id}`}>\n                <Card.Img src={products.image} variant='top'/>\n            </Link>\n            <Card.Body>\n            <Link to={`/product/${products._id}`}>\n                <Card.Title as='div'>\n                <strong>{products.name}</strong>\n                </Card.Title>\n            </Link>\n\n            <Card.Text as='div'>\n                <Ratings value={products.rating} text={`${products.numReviews} reviews`}/>\n            </Card.Text>\n\n            <Card.Text as='h3'>${products.price}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react';\nimport {Spinner} from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' role='status' style={{height:'100px',width:'100px', margin:'auto',display:'block'}}>\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react';\nimport {Alert} from 'react-bootstrap'\n\nconst Message = ({variant,children}) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps={\n    variant:'info',\n}\n\nexport default Message\n","import React,{useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Row,Col} from 'react-bootstrap';\nimport Product from '../../components/Product/Product';\n// import axios from 'axios';\nimport {listProducts} from '../../actions/productActions';\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message.js/Message';\n\nconst HomeScreen = () => {\n    const dispatch = useDispatch();\n    const productList = useSelector(state=>state.productList);\n\n    const {loading,error,products}=productList;\n    // const [products, setProducts] = useState([]);\n    useEffect(() => {\n        dispatch(listProducts())\n        // const fetchProducts=async()=>{\n        //     const {data} = await axios.get('/api/products')\n        //     setProducts(data);\n        // }\n        // fetchProducts();\n        // return () => {\n        //     fetchProducts();\n        // }\n    }, [dispatch])\n    return (\n        <>\n            <h1>Latest Product</h1>  \n    {loading ? <Loader/>:error ? <Message variant='danger'>{error}</Message>:            <Row>\n                {\n                    products.map(product=>(\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                        <Product products={product}/>\n                        </Col>\n                    ))\n                }\n                </Row> }\n\n        </>\n    )\n}\n\nexport default HomeScreen\n","import {\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS\n} from '../constants/productConstants';\nimport axios from 'axios';\n\nexport const listProducts = ()=>async(dispatch)=>{\n    try {\n        dispatch({type:PRODUCT_LIST_REQUEST})\n\n        const {data}=await axios.get('/api/products')\n\n        dispatch({\n            type:PRODUCT_LIST_SUCCESS,\n            payload:data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload:error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response\n        })\n    }\n}\n\nexport const listProductDetails = (id)=>async(dispatch)=>{\n    try {\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\n\n        const {data}=await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type:PRODUCT_DETAILS_SUCCESS,\n            payload:data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response\n        })\n    }\n}","export const  PRODUCT_LIST_REQUEST ='PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS  ='PRODUCT_LIST_SUCCESS'\nexport const  PRODUCT_LIST_FAIL ='PRODUCT_LIST_FAIL'\n\nexport const  PRODUCT_DETAILS_REQUEST ='PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS  ='PRODUCT_DETAILS_SUCCESS'\nexport const  PRODUCT_DETAILS_FAIL ='PRODUCT_DETAILS_FAIL'","import React,{useState,useEffect} from 'react'\nimport {Row,Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap';\nimport {useDispatch,useSelector} from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { listProductDetails } from '../../actions/productActions';\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message.js/Message';\nimport Ratings from '../../components/Ratings/Ratings';\n\n\nconst ProductsScreen = ({history,match}) => {\n//    const [product, setProduct] = useState([]);\nconst [qty, setQty] = useState(1);\nconst dispatch = useDispatch();\nconst {loading,error,product} = useSelector(state=>state.productDetails);\n\n   useEffect(()=>{\n    //    const fetchProduct = async()=>{\n    //        const {data} = await axios.get(`/api/products/${match.params.id}`)\n    //        setProduct(data)\n    //    }\n    //    fetchProduct()\n    // //    return ()=>{\n    // //     fetchProduct();\n    // //    }\n    dispatch(listProductDetails(match.params.id))\n   },[dispatch,match]);\n \n\n   const addToCartHandler=()=>{\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n   }\n    return (\n        <>\n         <Link className='btn btn-dark my-3' to='/'>\n             Go Back\n             </Link> \n    {loading ? <Loader/>:error? <Message variant='danger'>{error}</Message>:(\n        <Row>\n        <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid/>\n        </Col>  \n        <Col md={3}>\n        <ListGroup variant='flush'>\n            <ListGroup.Item>\n            <h2>{product.name}</h2>\n            </ListGroup.Item>\n            <ListGroup.Item>\n                <Ratings value={product.rating} text={`${product.numReviews} reviews`}/>\n            </ListGroup.Item>\n            <ListGroup.Item>\n                Price: ${product.price}\n            </ListGroup.Item>\n            <ListGroup.Item>\n                Description: {product.description}\n            </ListGroup.Item>\n        </ListGroup>\n        </Col>\n        <Col md={3}>\n            <Card>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <Row>\n                            <Col>\n                            Price:\n                            </Col>\n                            <Col>\n                            <strong>${product.price}</strong>\n                            </Col>\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                    <Row>\n                            <Col>\n                            Status :\n                            </Col>\n                            <Col>\n                            {product.countInStock > 0 ? 'In Stocks': 'Out of Stocks'}\n                            </Col>\n                        </Row>\n                    </ListGroup.Item>\n                    {\n                        product.countInStock > 0 && (\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Qty</Col>\n                                    <Col>\n                                    <Form.Control as='select' value={qty} onChange={(e)=>setQty(e.target.value)}>\n                                      {  [...Array(product.countInStock).keys()].map(x=>{\n                                            return (\n                                                <option key={x+1} value={x+1}>\n                                                    {x+1}\n                                                </option>\n                                            )\n                                        })}\n                                    </Form.Control>\n                                    \n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        )\n                    }\n                    <ListGroup.Item>\n                        <Button\n                         onClick={addToCartHandler}\n                         className='btn-block'\n                         type='button'\n                         disabled={product.countInStock === 0}\n                        >\n                            Add To Cart\n                        </Button>\n                    </ListGroup.Item>\n                </ListGroup>\n            </Card>\n        </Col>\n        </Row>  \n\n    )}\n          \n        </>\n    )\n}\n\nexport default withRouter(ProductsScreen);\n","import axios from 'axios'\nimport {CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\n\nexport const addToCart=(id,qty)=>async(dispatch,getState)=>{\n    const {data} = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type:CART_ADD_ITEM,\n        payload:{\n            product:data._id,\n            name:data.name,\n            image:data.image,\n            price:data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems',JSON.stringify( getState().cart.cartItems))\n}\n\nexport const removeFromCart=(id)=>(dispatch,getState)=>{\n    dispatch({\n        type:CART_REMOVE_ITEM,\n        payload:id\n    })\n    localStorage.setItem('cartItems',JSON.stringify( getState().cart.cartItems))\n}\n\nexport const saveShippingAddress=(data)=>(dispatch)=>{\n    dispatch({\n        type:CART_SAVE_SHIPPING_ADDRESS,\n        payload:data\n    })\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\n}\n\nexport const savePaymentMethod=(data)=>(dispatch)=>{\n    dispatch({\n        type:CART_SAVE_PAYMENT_METHOD,\n        payload:data\n    })\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\n}","export const CART_ADD_ITEM  = 'CART_ADD_ITEM'\nexport const  CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import React,{useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Row,Col,ListGroup,Image,Form,Button,Card} from 'react-bootstrap'\nimport {addToCart,removeFromCart} from '../../actions/cartActions'\nimport { Link, withRouter } from 'react-router-dom';\nimport Message from '../../components/Message.js/Message';\n\nconst CartScreen = ({match,location,history}) => {\n    const productId = match.params.id\n\n    const qty=location.search ? Number(location.search.split('=')[1]):1;\n    const dispatch = useDispatch();\n    const cart = useSelector(state=>state.cart)\n    const {cartItems}=cart\n    useEffect(()=>{\n        if(productId){\n            dispatch(addToCart(productId,qty))\n        }\n    },[dispatch,productId, qty])\n\n    const removeFromCartHandler = (id)=>{\n        dispatch(removeFromCart(id))\n    }\n    const checkoutHandler=()=>{\n        history.push('/login?redirect=shipping')\n    }\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shooping Cart</h1>\n                {cartItems.length === 0 ? <Message>Your Cart is empty <Link to='/'>Go Back</Link></Message>:(\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item=>(\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.image} fluid rounded/>\n                                    </Col>\n                                    <Col md={3}>\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                        <Col md={2}>${item.price}</Col>\n                        <Col md={2}>\n                        <Form.Control as='select' value={item.qty} onChange={(e)=>dispatch(addToCart(item.product,Number( e.target.value)))}>\n                                      {  [...Array(item.countInStock).keys()].map(x=>{\n                                            return (\n                                                <option key={x+1} value={x+1}>\n                                                    {x+1}\n                                                </option>\n                                            )\n                                        })}\n                                    </Form.Control>\n                        </Col>\n                        <Col md={2}>\n                            <Button variant='light' onClick={()=>removeFromCartHandler(item.product)} type='button'>\n                                <i className='fas fa-trash'></i>\n                            </Button>\n                        </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>SubTotal ({cartItems.reduce((acc,item)=>acc + item.qty,0)}) items</h2>\n                            ${cartItems.reduce((acc,item)=>acc + item.qty * item.price,0).toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\n                                        Proceed to checkout\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n\n            </Col>\n\n        </Row>\n    )\n}\n\nexport default withRouter(CartScreen)\n","import React from 'react';\nimport {Container,Row,Col} from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React,{useState,useEffect} from 'react';\nimport {Form,Button,Row,Col} from 'react-bootstrap';\nimport {useDispatch,useSelector} from 'react-redux';\nimport { withRouter,Link } from 'react-router-dom';\nimport {login} from '../../actions/userActions'\nimport FormContainer from '../../components/FormContainer/FormContainer';\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message.js/Message';\n\nconst LoginScreen = ({location,history}) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch();\n    const userLogin = useSelector(state=>state.userLogin);\n    const{loading,error,userInfo} = userLogin\n    const redirect = location.search ? location.search.split('=')[1]:'/';\n    useEffect(()=>{\n        if(userInfo){\n            history.push(redirect)\n        }\n    },[history,userInfo,redirect])\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        dispatch(login(email,password))\n    }\n    return (\n        \n            <FormContainer>\n                <h1>Sign In</h1>\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader></Loader>}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='email'>\n                    <Form.Label>\n                    Email Address    \n                    </Form.Label> \n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                    <Form.Label>\n                    Password    \n                    </Form.Label> \n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n                       \n                    <Button type='submit' variant='primary'>\n                    Sign In    \n                    </Button>   \n                </Form> \n                <Row className='py-3'>\n                    <Col>\n                        New Customer? <Link to={redirect ? `/register?redirect=${redirect}`:'/register'}>Register</Link>\n                    </Col>\n                </Row>\n            </FormContainer>\n    )\n}\n\nexport default withRouter(LoginScreen)\n","import React,{useState,useEffect} from 'react';\nimport {Form,Button,Row,Col} from 'react-bootstrap';\nimport {useDispatch,useSelector} from 'react-redux';\nimport { withRouter,Link } from 'react-router-dom';\nimport {register} from '../../actions/userActions'\nimport FormContainer from '../../components/FormContainer/FormContainer';\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message.js/Message';\n\nconst RegisterScreen = ({location,history}) => {\n    const [email, setEmail] = useState('')\n    const [name, setName] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch();\n    const userRegister = useSelector(state=>state.userRegister);\n    const{loading,error,userInfo} = userRegister\n    const redirect = location.search ? location.search.split('=')[1]:'/';\n    useEffect(()=>{\n        if(userInfo){\n            history.push(redirect)\n        }\n    },[history,userInfo,redirect])\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        //DISPATCH REGISTER\n        if(\n            password!==confirmPassword\n        ){\n            setMessage('Password do not match')\n        }else{\n            dispatch(register(name,email,password))\n        }\n        \n    }\n    return (\n        \n            <FormContainer>\n                <h1>Sign UP</h1>\n                {message && <Message variant='info'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader></Loader>}\n                <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                    Name    \n                    </Form.Label> \n                    <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e)=>setName(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                    <Form.Label>\n                    Email Address    \n                    </Form.Label> \n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                    <Form.Label>\n                    Password    \n                    </Form.Label> \n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='confirmpassword'>\n                    <Form.Label>\n                    Confirm Password    \n                    </Form.Label> \n                    <Form.Control type='password' placeholder='Enter confirmpassword' value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n                       \n                    <Button type='submit' variant='primary'>\n                    Register   \n                    </Button>   \n                </Form> \n                <Row className='py-3'>\n                    <Col>\n                        Have an Account?{' '}<Link to={redirect ? `/login?redirect=${redirect}`:'/login'}>Login</Link>\n                    </Col>\n                </Row>\n            </FormContainer>\n    )\n}\n\nexport default withRouter(RegisterScreen)\n","import React,{useState,useEffect} from 'react';\nimport {Form,Button,Row,Col} from 'react-bootstrap';\nimport {useDispatch,useSelector} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {getUserDetails,updateUserProfile} from '../../actions/userActions'\nimport Loader from '../../components/Loader/Loader';\nimport Message from '../../components/Message.js/Message';\n\nconst ProfileScreen = ({location,history}) => {\n    const [email, setEmail] = useState('')\n    const [name, setName] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch();\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n  \n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n    \n    useEffect(()=>{\n        console.log(\"user\",user);\n        if(!userInfo){\n            history.push('/')\n        }else{\n            if(!user.name){\n                dispatch(getUserDetails('profile'))\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    },[history,userInfo,dispatch,user])\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        //DISPATCH REGISTER\n        if(\n            password!==confirmPassword\n        ){\n            setMessage('Password do not match')\n        }else{\n            //DISPATCH UPDATE PROFILE\n            dispatch(updateUserProfile({\n                id:user._id,name,email,password\n            }))\n        }\n        \n    }\n    return (\n        \n            <Row>\n                <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='info'>{message}</Message>}\n                {success && <Message variant='success'>Profile Updated Successfully</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader></Loader>}\n                <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                    Name    \n                    </Form.Label> \n                    <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e)=>setName(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                    <Form.Label>\n                    Email Address    \n                    </Form.Label> \n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                    <Form.Label>\n                    Password    \n                    </Form.Label> \n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='confirmpassword'>\n                    <Form.Label>\n                    Confirm Password    \n                    </Form.Label> \n                    <Form.Control type='password' placeholder='Enter confirmpassword' value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n                       \n                    <Button type='submit' variant='primary'>\n                    Update  \n                    </Button>   \n                </Form> \n                \n                </Col>\n                <Col md={9}>\n                    <h2>My Order</h2>\n                </Col>\n            </Row>\n    )\n}\n\nexport default withRouter(ProfileScreen)\n","import React from 'react';\nimport {Nav} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\n\nconst CheckoutSteps = ({step1,step2,step3,step4 }) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ?(\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ):(\n                    <Nav.Link disabled>Sign In</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ?(\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ):(\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ?(\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ):(\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ?(\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ):(\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React,{useState} from 'react';\nimport {Form,Button} from 'react-bootstrap';\nimport {useDispatch,useSelector} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {saveShippingAddress} from '../../actions/cartActions';\nimport CheckoutSteps from '../../components/CheckoutSteps/CheckoutSteps';\n\n\nimport FormContainer from '../../components/FormContainer/FormContainer';\n\n\nconst ShippingScreen = ({history}) => {\n    const cart = useSelector(state=>state.cart)\n    const {shippingAddress} = cart\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n    const submitHandler=(e)=>{\n        e.preventDefault();\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\n        history.push('/payment')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}> \n            <Form.Group controlId='address'>\n                <Form.Label>\n                    Address    \n                </Form.Label> \n                <Form.Control type='text' required placeholder='Enter address' value={address} onChange={(e)=>setAddress(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='city'>\n                <Form.Label>\n                    City    \n                </Form.Label> \n                <Form.Control type='text' required placeholder='Enter city' value={city} onChange={(e)=>setCity(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='postalCode'>\n                <Form.Label>\n                    PostalCode    \n                </Form.Label> \n                <Form.Control type='text' required placeholder='Enter postalCode' value={postalCode} onChange={(e)=>setPostalCode(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='country'>\n                <Form.Label>\n                    Country    \n                </Form.Label> \n                <Form.Control type='text' required placeholder='Enter country' value={country} onChange={(e)=>setCountry(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n                Continue\n            </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default withRouter(ShippingScreen);\n","import React,{useState} from 'react';\nimport {Form,Button,Col} from 'react-bootstrap';\nimport {useDispatch,useSelector} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {savePaymentMethod} from '../../actions/cartActions';\nimport CheckoutSteps from '../../components/CheckoutSteps/CheckoutSteps';\n\n\nimport FormContainer from '../../components/FormContainer/FormContainer';\n\n\nconst PaymentScreen = ({history}) => {\n    const cart = useSelector(state=>state.cart)\n    const {shippingAddress} = cart\n\n    if(!shippingAddress){\n        history.push('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n\n    const dispatch = useDispatch()\n    const submitHandler=(e)=>{\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/place')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3/>\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}> \n            <Form.Group controlId='paymentmethod'>\n                <Form.Label as='legend'>\n                    Select Payment Method    \n                </Form.Label> \n                <Col>\n                    <Form.Check type='radio' label='Paypal or Credit Card'\n                    id='paypal'\n                    name='paymentMethod'\n                    value='PayPal'\n                    checked\n                    onChange={\n                        (e)=>setPaymentMethod(e.target.value)\n                    }></Form.Check>\n\n                    <Form.Check type='radio' label='Stripe'\n                    id='Stripe'\n                    name='paymentMethod'\n                    value='Stripe'\n                    onChange={\n                        (e)=>setPaymentMethod(e.target.value)\n                    }></Form.Check>\n\n                </Col>\n            </Form.Group>\n\n            \n            <Button type='submit' variant='primary'>\n                Continue\n            </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default withRouter(PaymentScreen);\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport {Container} from 'react-bootstrap';\nimport HomeScreen from './screens/HameScreen/HomeScreen';\nimport ProductsScreen from './screens/ProductsScreen/ProductsScreen';\nimport CartScreen from './screens/CartScreen/CartScreen';\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen/PaymentScreen';\n\nfunction App() {\n  return (\n\n    <Router>\n    <Header/>\n    <main className='py-3'>\n      <Container>\n        <Route path='/shipping'>\n          <ShippingScreen/>\n        </Route>\n        <Route path='/payment'>\n          <PaymentScreen/>\n        </Route>\n        <Route path='/login'>\n          <LoginScreen/>\n        </Route>\n        <Route path='/register'>\n          <RegisterScreen/>\n        </Route>\n        <Route path='/profile'>\n          <ProfileScreen/>\n        </Route>\n        <Route path='/product/:id'>\n          <ProductsScreen/>\n        </Route>\n        <Route path='/cart/:id?'>\n          <CartScreen/>\n        </Route>\n        <Route exact path='/'>\n        <HomeScreen/>\n        </Route>\n      </Container>\n    </main>\n      <Footer/>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import  {createStore,combineReducers,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productDetailsReducer, productReducer} from '../reducers/productReducers';\n\nimport {cardReducer} from '../reducers/cartReducers';\nimport { userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer } from '../reducers/userReducers';\n\nconst reducer = combineReducers({\n    productList:productReducer,\n    productDetails:productDetailsReducer,\n    cart:cardReducer,\n    userLogin:userLoginReducer,\n    userRegister:userRegisterReducer,\n    userDetails:userDetailsReducer,\n    userUpdateProfile:userUpdateProfileReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')): []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')): null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')): {}\n\nconst initialState = {\n    cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},\n    userLogin:{userInfo:userInfoFromStorage}\n}\n\nconst middleware= [thunk]\n\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;","import {\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS\n} from '../constants/productConstants';\n\nexport const productReducer=(state={products:[]},action)=>{\n    switch(action.type){\n        case PRODUCT_LIST_REQUEST:\n            return {loading: true, products:[]}\n        case PRODUCT_LIST_SUCCESS :\n            return {loading: false, products:action.payload}\n        case PRODUCT_LIST_FAIL :\n            return {loading: false, error:action.payload}\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer=(state={product:{reviews:[]}},action)=>{\n    switch(action.type){\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading: true, ...state}\n        case PRODUCT_DETAILS_SUCCESS :\n            return {loading: false, product:action.payload}\n        case PRODUCT_DETAILS_FAIL :\n            return {loading: false, error:action.payload}\n        default:\n            return state\n    }\n}","import {CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants';\n\nexport const cardReducer = (state={cartItems:[],shippingAddress:{}},action)=>{\n    switch(action.type){\n        case CART_ADD_ITEM :\n            const item = action.payload\n\n            const existItem = state.cartItems.find(x=>x.product === item.product)\n\n            if(existItem){\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map(x=>x.product === existItem.product ? item:x)\n                }\n            }else{\n                return {\n                    ...state,\n                    cartItems:[...state.cartItems,item]\n                }\n            }\n            case CART_REMOVE_ITEM:\n            return{\n                ...state,\n                cartItems:state.cartItems.filter(x=> x.product !== action.payload)\n            }\n            case CART_SAVE_SHIPPING_ADDRESS:\n                return{\n                    ...state,\n                    shippingAddress:action.payload\n                }\n\n            case CART_SAVE_PAYMENT_METHOD:\n                return{\n                    ...state,\n                    paymentMethod:action.payload\n                }\n        default:\n            return state\n    }\n}","import {\n   USER_LOGIN_SUCCESS,\n   USER_LOGIN_REQUEST,\n   USER_LOGIN_FAIL,\n   USER_LOGOUT,\n   USER_REGISTER_REQUEST,\n   USER_REGISTER_SUCCESS,\n   USER_REGISTER_FAIL,\n   USER_DETAILS_REQUEST,\n   USER_DETAILS_SUCCESS,\n   USER_DETAILS_FAIL,\n   USER_UPDATE_PROFILE_REQUEST,\n   USER_UPDATE_PROFILE_SUCCESS,\n   USER_UPDATE_PROFILE_FAIL\n} from '../constants/userConstants';\nexport const userLoginReducer=(state={},action)=>{\n    switch(action.type){\n        case USER_LOGIN_REQUEST:\n            return {loading: true}\n        case USER_LOGIN_SUCCESS :\n            return {loading: false, userInfo:action.payload}\n        case USER_LOGIN_FAIL :\n            return {loading: false, error:action.payload}\n        case USER_LOGOUT :\n            return {\n                \n            }\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer=(state={user:{}},action)=>{\n    switch(action.type){\n        case USER_REGISTER_REQUEST:\n            return {...state,loading: true}\n        case USER_REGISTER_SUCCESS :\n            return {...state,loading: false, userInfo:action.payload}\n        case USER_REGISTER_FAIL :\n            return {...state,loading: false, error:action.payload}\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer=(state={user:{}},action)=>{\n    switch(action.type){\n        case USER_DETAILS_REQUEST:\n            return {...state,loading: true}\n        case USER_DETAILS_SUCCESS :\n            return {loading: false, user:action.payload}\n        case USER_DETAILS_FAIL :\n            return {loading: false, error:action.payload}\n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer=(state={},action)=>{\n    switch(action.type){\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading: true}\n        case USER_UPDATE_PROFILE_SUCCESS :\n            return {loading: false, success:true,userInfo:action.payload}\n        case USER_UPDATE_PROFILE_FAIL :\n            return {loading: false, error:action.payload}\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './bootstrap.min.css'\nimport {Provider} from 'react-redux';\nimport store from './store/store';\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  // </React.StrictMode>,\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}